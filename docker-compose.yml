version: '3'

networks:
  network:

services:
  postgres:
    image: postgres:14.0-alpine
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - network
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
  graphql:
    build:
      context: .
      target: graphql
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    ports:
      - 8000:8000
    environment:
      - ROCKET_ADDRESS=0.0.0.0
      - DATABASE_URL=${DATABASE_URL}
  chainlink-collector:
    build:
      context: .
      target: chainlink-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - NODE_URL=https://eth-rpc.gateway.pokt.network/
      - DATABASE_URL=${DATABASE_URL}
  coingecko-collector:
    build:
      context: .
      target: coingecko-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - DATABASE_URL=${DATABASE_URL}
  cryptocompare-collector:
    build:
      context: .
      target: cryptocompare-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - DATABASE_URL=${DATABASE_URL}
  aggregator:
    build:
      context: .
      target: aggregator
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - CURRENCY=USD
      - DATABASE_URL=${DATABASE_URL}
  frontend:
    restart: always
    build: frontend
    depends_on:
      - graphql
    networks:
      - network
    ports:
      - 3000:3000
    environment:
      - REACT_APP_API_ENDPOINT=http://localhost:8000/graphql
  