version: '3'

networks:
  network:

services:
  postgres:
    image: postgres:14.0-alpine
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - network
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
  postgres-user:
    image: postgres:14.0-alpine
    restart: always
    volumes:
      - ./data-user:/var/lib/postgresql/data
    networks:
      - network
    restart: always
    volumes:
      - ./data-user:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${USER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5433:5432
  graphql:
    build:
      context: .
      target: graphql
    restart: always
    depends_on:
      - postgres
      - user-service
    networks:
      - network
    ports:
      - 8000:8000
    environment:
      - ROCKET_ADDRESS=0.0.0.0
      - DATABASE_CRYPTO_URL=${DATABASE_URL}
      - DATABASE_USERS_URL=${USER_DATABASE_URL}
      - USER_SERVICE_URL=http://user-service:8001
  chainlink-collector:
    build:
      context: .
      target: chainlink-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - NODE_URL=https://eth-rpc.gateway.pokt.network/
      - DATABASE_URL=${DATABASE_URL}
  coingecko-collector:
    build:
      context: .
      target: coingecko-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - DATABASE_URL=${DATABASE_URL}
  cryptocompare-collector:
    build:
      context: .
      target: cryptocompare-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - DATABASE_URL=${DATABASE_URL}
  gateio-collector:
    build:
      context: .
      target: gateio-collector
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - DATABASE_URL=${DATABASE_URL}
  aggregator:
    build:
      context: .
      target: aggregator
    restart: always
    depends_on:
      - postgres
    networks:
      - network
    environment:
      - CURRENCY=USD
      - DATABASE_URL=${DATABASE_URL}
  user-service:
    build:
      context: .
      target: user-service
    restart: always
    depends_on:
      - postgres-user
    networks:
      - network
    environment:
      - PORT=8001
      - DATABASE_URL=${USER_DATABASE_URL}
      - KEY=${KEY}
  notification-service:
    build:
      context: .
      target: notification-service
    restart: always
    depends_on:
      - postgres
      - postgres-user
      - telegram-notification
    networks:
      - network
    environment:
      - CRYPTO_DATABASE_URL=${DATABASE_URL}
      - USER_DATABASE_URL=${USER_DATABASE_URL}
      - BRELLO_API_KEY=${BRELLO_API_KEY}
      - TELEGRAM_NOTIFICATION_URL=http://telegram-notification:8002
  telegram-notification:
    build:
      context: .
      target: telegram-notification
    restart: always
    depends_on:
      - postgres-user
    networks:
      - network
    environment:
      - PORT=8002
      - TELOXIDE_TOKEN=${TELOXIDE_TOKEN}
      - DATABASE_URL=${USER_DATABASE_URL}
  frontend:
    restart: always
    build: frontend
    depends_on:
      - graphql
    networks:
      - network
    ports:
      - 3000:3000
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    networks:
      - network
    volumes:
      - ./nginx/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/cert/cert.pem:/etc/ssl/cert.pem
      - ./nginx/cert/key.pem:/etc/ssl/key.pem
